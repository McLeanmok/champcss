/*
    ChampCSS Flex Plugin
    This plugin provides utility classes for flexbox layout.
    It includes classes for flex direction, justification, alignment, and more.
    
    The classes are organized into layers:
    - `champ-flex`: Contains the core flexbox utility classes.
    - `custom-flex`: For any custom flexbox classes you want to add.

    You can easily override the content in this plug-in in the custom layer which takes precedence over all the default content.
    Here's how it works:
    - Flex basics: `.flex`, `.flex-row`, `.flex-col`, etc.: used to set the flex direction of an element.
    - Justification: `.justify-start`, `.justify-end`, `.justify-center`, `.justify-between`, `.justify-around`, `.justify-evenly`: used to justify content along the main axis of a flex container.
    - Alignment: `.items-start`, `.items-end`, `.items-center`, `.items-baseline`, `.items-stretch`: used to align items along the cross axis of a flex container.
    - Self-alignment: `.self-start`, `.self-end`, `.self-center`, `.self-baseline`, `.self-stretch`: used to align a specific item within a flex container.
    - Flex order: `.order-first`, `.order-last`, `.order-none`: used to specify the order of items in a flex container.
    - Flex basis: `.flex-basis-auto`, `.flex-basis-0`, `.flex-basis-full`: used to set the initial size of flex items.
    - Flex grow and shrink: `.flex-grow-0`, `.flex-grow`, `.flex-shrink-0`, `.flex-shrink`: used to control how flex items grow and shrink in a flex container. There are 5 flex shrink settings.
    - Helpers: `.flexbox`, `.flex-stack`: used to create common flexbox layouts.

*/
/* Initializing layers */
@layer champ-flex, custom-flex;

@layer custom-flex {
  /* Add your custom flex classes here */
}

@layer champ-flex {
  /* Flex basics */
  .flex {
    display: flex;
  }
  .flex-row {
    flex-direction: row;
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-row-reverse {
    flex-direction: row-reverse;
  }
  .flex-col-reverse {
    flex-direction: column-reverse;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .flex-nowrap {
    flex-wrap: nowrap;
  }

  /* Justification */
  .justify-start {
    justify-content: flex-start;
  }

  .justify-end {
    justify-content: flex-end;
  }

  .justify-center {
    justify-content: center;
  }

  .justify-between {
    justify-content: space-between;
  }

  .justify-around {
    justify-content: space-around;
  }

  .justify-evenly {
    justify-content: space-evenly;
  }

  /* Alignment */

  .items-start {
    align-items: flex-start;
  }

  .items-end {
    align-items: flex-end;
  }

  .items-center {
    align-items: center;
  }

  .items-baseline {
    align-items: baseline;
  }

  .items-stretch {
    align-items: stretch;
  }

  .self-start {
    align-self: flex-start;
  }

  .self-end {
    align-self: flex-end;
  }

  .self-center {
    align-self: center;
  }

  .self-baseline {
    align-self: baseline;
  }

  .self-stretch {
    align-self: stretch;
  }

  /* Flex order */
  .order-first {
    order: -1;
  }

  .order-last {
    order: 9999;
  }
  .order-none {
    order: 0;
  }
  /* Flex basis */
  .flex-basis-auto {
    flex-basis: auto;
  }
  .flex-basis-0 {
    flex-basis: 0;
  }
  .flex-basis-full {
    flex-basis: 100%;
  }

  /* Flex grow and shrink */
  .flex-grow-0 {
    flex-grow: 0;
  }

  .flex-grow-1 {
    flex-grow: 1;
  }
  .flex-shrink-0 {
    flex-shrink: 0;
  }

  .flex-shrink-1 {
    flex-shrink: 1;
  }
  .flex-shrink-2 {
    flex-shrink: 2;
  }
  .flex-shrink-3 {
    flex-shrink: 3;
  }
  .flex-shrink-4 {
    flex-shrink: 4;
  }
  .flex-shrink-5 {
    flex-shrink: 5;
  }

  /* Shrink and grow */
  .flex-grow {
    flex-grow: 1;
  }

  .flex-shrink {
    flex-shrink: 1;
  }

  .flex-none {
    flex: none;
  }

  /* Helpers */
  .flexbox {
    display: flex;
    justify-content: space-between;
    align-content: center;
  }
  .flex-stack {
    display: flex;
    flex-direction: column;
    gap: var(--content-gap);
  }
}
